# Site
# repository: "yourusername/your-repo-name" # eg. "sproogen/modern-resume-theme" (Uncomment and set if hosting on GitHub Pages from a repo)
# favicon: "images/favicon.ico" # (optional)

# Content configuration version
version: 2

# Personal info
name: 夏子雷
title: 全栈工程师 (Full Stack Engineer)
email: xiazilei1994@gmail.com
# email_title: Email # (Email title override)
# phone: '82'
# phone_title: Phone # (Phone title override)
website: https://xzlpinbo.github.io/
# website_title: Web # (Website title override)

# Dark Mode (true/false/never)
darkmode: never # Recommended: 'never', 'true', or 'false'

# Social links
# twitter_username: "jekyllrb"
github_username: "xzlpinbo" # Quoted for consistency, though often not strictly necessary for simple usernames
# stackoverflow_username: "00000001"
# dribbble_username: "jekyll"
# facebook_username: "jekyll"
# flickr_username: "jekyll"
# instagram_username: "jekyll"
# linkedin_username: "jekyll"
# xing_username: "jekyll"
# pinterest_username: "jekyll"
# youtube_username: "jekyll"
# orcid_username: "0000-0000-0000-0000"
# googlescholar_username: "D847cGsAAAAJ"

# Additional icon links
# additional_links:
#   - title: "Link name"
#     icon: "fab fa-twitter" # Font Awesome brand icon name (eg. fab fa-twitter)
#     url: "https://google.com" # Link url

# Google Analytics and Tag Manager
# gtm: "GTM-0000000"
# gtag: "UA-00000000-0"
# google_analytics: "UA-00000000-0"

# About Section
# about_title: "关于我" # (Use this to override about section title)
about_profile_image: "images/profile1.jpg" # Quoted for consistency
about_content: |
  拥有5年全栈开发经验，精通Java/Python后端及React.js前端技术，熟悉AWS云平台基础设施。
  曾带领团队为多家韩国大型企业及政府部门提供企业级定制解决方案，深度参与从系统设计、规划、开发到项目交付的全生命周期管理。
  担任团队负责人期间，主导Code Review、任务分配、新人指导，并负责与上级进行项目沟通与汇报。
  坚信“优秀的代码本身即是最佳文档”，致力于编写结构清晰、逻辑简明、易于维护的高质量代码。

content:
  - title: "工作经历 (Work Experience)"
    layout: list
    content:
      - layout: left
        title: "BusinessOn"
        sub_title: "全栈工程师 / 技术主管 (Full Stack Engineer / Tech Lead)"
        caption: "2019年 - 至今"
        link: "https://www.businesson.co.kr/"
        description: |
          在韩国上市B2B解决方案提供商BusinessOn任职，专注于电子化企业服务。
          初期担任全栈工程师，负责核心产品（如电子税务、电子合同系统）的开发与维护。
          后晋升为技术主管，领导团队为多个大型企业客户（如LG、SK Hynix）及政府机构交付定制化项目。
          主要职责包括：
          - 领导项目团队，进行需求分析、系统架构设计、核心模块开发。
          - 管理项目进度，分配开发资源，指导团队成员，执行Code Review。
          - 负责技术选型、性能优化（数据库、JVM、服务器集群）及CI/CD流程建设。
          - 与客户及内部多部门沟通协作，确保项目顺利交付与系统稳定运行。

  - title: "项目经历 (Projects)"
    layout: list
    content:
      - layout: top-middle
        border: weak
        title: "CHUNGHO 电子签约系统"
        link: "https://www.chungho.co.kr/"
        quote: >
          为CHUNGHO集团（会员数1000万级，年销售额5000亿韩元）构建B2B/B2C产品预约购买及电子签约平台。
        description: |
          - 担任项目开发Leader，负责团队管理、任务分配与资源协调。
          - 实现与公司内部ERP系统的数据联动与业务集成。
          - 设计并实施符合个人信息保护法的内部隔离网络架构。
          - 独立完成系统架构设计、核心模块开发及项目管理。
          - 构建基于AWS Lambda的自动化错误监控与告警系统。
          技术栈: React.js, Spring Boot (Java 11), PostgreSQL, Docker, AWS Lambda

      - layout: top-middle
        border: weak
        title: "LG新能源 内部审批及合约系统"
        link: "https://www.lgensol.com/zh/index"
        quote: >
          为LG新能源（全球12万名员工，日PV十万级）开发内部电子审批、合约及电子签名系统。
        description: |
          - 集成公司内部ERP系统，确保系统符合一级信息安全标准。
          - 负责系统全栈开发，并搭建CI/CD自动化部署流水线。
          - 开发内部系统全自动风险监控模块，保障系统稳定性。
          - 设计并实现每日批量更新服务；进行Slow Query及JVM性能调优。
          技术栈: React.js, Spring Boot (Java 11), Oracle, CI/CD

      - layout: top-middle
        border: weak
        title: "SK Hynix 内部电子合约系统"
        link: "https://www.skhynix.com/"
        quote: >
          为SK Hynix（全球20万名员工，日PV十万级）定制开发内部电子合约系统。
        description: |
          - 作为项目开发Leader，主导团队管理与资源分配；负责与客户持续沟通并提供项目维护支持。
          - 实现与涉密内部数据库的安全联动，确保系统符合最高级别信息安全要求。
          - 独立完成系统架构设计、核心功能开发、项目管理及后期维护。
          - 针对企业级应用进行Slow Query、JVM及WAS/WEB/DB集群性能调优。
          - 构建大型每日批量处理任务，集成30+内部系统接口，并应用多线程技术提升处理效率。
          技术栈: React.js, Spring Boot (Java 8), Django 3, Oracle, PostgreSQL, Docker, Windows Server

      - layout: top-middle
        border: weak
        title: "Lotte-rental 电子化签约系统"
        link: "https://www.lotterental.com/"
        quote: >
          为Lotte-rental（年销售额3万亿韩元）开发租车签约及过户电子化金融系统。
        description: |
          - 集成公司内部ERP系统，并实现内部系统资源的高效调用。
          - 独立负责系统设计、开发、项目管理及后续维护工作。
          - 实现与韩国国家金融监管机构系统的联动，支持每月自动扣款及认证功能。
          - 严格遵循金融项目标准，确保系统数据安全与业务保密。
          技术栈: React.js, Spring Boot (Java 8), PostgreSQL

      - layout: top-middle
        border: weak
        title: "韩国小企业市场促进公司 政府服务网站"
        link: "https://www.semas.or.kr/web/main/index.kmdc"
        quote: >
          为韩国政府部门开发面向全国企业法人的服务网站（日PV千万级）。
        description: |
          - 负责设计和开发支持千万级日PV的高流量、高并发、高可用系统。
          - 执行千万级并发压力测试，并部署实时性能监控系统。
          - 进行毫秒级Slow Query优化、JVM调优及WAS/WEB/DB集群性能调优。
          - 为贷款类业务实现数据自动审核、个人认证自动化，并适配多个政府机关API接口。
          技术栈: React.js, Spring Boot (Java 8), Django 3, Oracle, PostgreSQL

      - layout: top-middle
        border: weak
        title: "SaaS平台 Python Django至Java Spring Boot迁移重构"
        # link: "" # No link for internal project
        quote: >
          主导公司核心SaaS平台的技术栈迁移：从Python Django重构至Java Spring Boot，提升系统性能与可维护性。
        description: |
          - 对早期Django 2代码进行全面梳理与现代化重构。
          - 优化并重构了原有的数据库设计，提升数据一致性与查询效率。
          - 构建全面的单元测试与集成测试用例，实现部署前自动化测试。
          - 建立CI/CD流水线，实现自动化部署与实时系统监控。
          技术栈: Spring Boot (Java 8), Python Django 2, PostgreSQL, CI/CD

      - layout: top-middle
        # border: weak # Last item often doesn't need a border
        title: "公司内部Back-Office管理系统开发"
        # link: "" # No link for internal project
        quote: >
          为提升内部运营效率，开发公司内部Back-Office系统，用于统一管理各项服务及自动化月度数据处理。
        description: |
          - 系统设计满足ISO27001信息安全管理体系认证要求。
          - 部署于公司内部网络，集成数据保密与IP访问监控功能。
          - 采用内部网络专用架构，确保系统安全性与隔离性。
          - 实施CI/CD流程，支持自动化部署与系统监控。
          技术栈: React.js, Django 3, PostgreSQL, CI/CD

  - title: "教育背景 (Education)"
    layout: list
    content:
      - layout: top-left
        title: "建国大学 (Konkuk University)"
        sub_title: "软件工程 (Software Engineering)"
        caption: "2016年 - 2020年"
        description: |
          - 主修计算机科学与技术，软件工程方向。
          - 毕业设计及毕业论文荣获校级奖项。
          - 多次荣获优秀外国留学生奖学金及韩语能力奖学金。

  - title: "技术技能 (Skills)"
    layout: list
    content:
      - layout: top-left
        title: "前端 (Front-End)"
        description: |
          - **JavaScript/TypeScript**: React.js, Next.js, Redux, Zustand
          - **UI/UX**: HTML5, CSS3, Sass/SCSS, Styled-Components, Material-UI
          - **构建工具**: Node.js, Npm/Yarn, Webpack, Babel

      - layout: top-left
        title: "后端 (Back-End)"
        description: |
          - **Java**: Spring Boot, Spring MVC, Spring Batch, Spring Security, Spring Data JPA, Spring Cloud AWS
          - **ORM/Data**: JPA, Hibernate, Querydsl, JPQL, MyBatis
          - **Python**: Django, Django REST framework
          - **构建/依赖**: Gradle, Maven

      - layout: top-left
        title: "数据库 & DevOps (Databases & DevOps)"
        description: |
          - **数据库**: Oracle, PostgreSQL, MySQL, Redis
          - **云服务 (AWS)**: EC2, S3, RDS, Lambda, CloudWatch, IAM
          - **容器化**: Docker, Docker-Compose, Kubernetes (基础)
          - **CI/CD**: Jenkins, GitLab CI, GitHub Actions
          - **服务器/中间件**: Nginx, Apache Tomcat
          - **操作系统**: Linux (CentOS, Ubuntu, Red Hat)

      - layout: top-left
        title: "其他工具 & 方法论 (Others)"
        description: |
          - **版本控制**: Git, Gitflow
          - **协作工具**: Jira, Confluence, Slack, Notion, Teams
          - **IDE**: IntelliJ IDEA, VS Code
          - **敏捷开发**: Scrum, Kanban

# Footer
footer_show_references: true
# references_title: "References available upon request." # Override references text

# Build settings
# theme: "modern-resume-theme" # (Use this if you are hosting your resume yourself)
remote_theme: "sproogen/modern-resume-theme" # (Use this if you are hosting your resume on GitHub)

sass:
  sass_dir: _sass # Note: In YAML, unquoted `_sass` is fine, but Jekyll convention often shows it quoted.
  style: compressed

plugins:
  - jekyll-seo-tag

exclude:
  - "Gemfile"
  - "Gemfile.lock"
  - "node_modules"
  - "vendor/bundle/"
  - "vendor/cache/"
  - "vendor/gems/"
  - "vendor/ruby/"
  - "lib/"
  - "scripts/"
  - "docker-compose.yml"